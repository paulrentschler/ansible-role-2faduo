---
# Install and configure Duo Security two-factor authentication for SSH logins

- name: add the Duo GPG key
  ansible.builtin.apt_key:
    url: https://duo.com/DUO-GPG-PUBLIC-KEY.asc
    state: present
  become: yes

- name: add Duo source to apt
  ansible.builtin.template:
    src: duosecurity.list.j2
    dest: /etc/apt/sources.list.d/duosecurity.list
  become: yes

- name: install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - libssl-dev
    - libpam-dev
  become: yes

- name: install Duo Unix SSH integration
  ansible.builtin.apt:
    name: duo-unix
    state: present
    update_cache: yes
  become: yes

- name: Duo configuration file
  ansible.builtin.template:
    src: pam_duo.conf.j2
    dest: /etc/duo/pam_duo.conf
    owner: sshd
    group: root
    mode: 0600
  become: yes

- name: configure sshd
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "^#?{{ item.key }}"
    line: "{{ item.key }}    {{ item.value }}"
    insertbefore: "^Subsystem"
    validate: /usr/sbin/sshd -t -f %s
  loop:
    - key: "UsePam"
      value: "yes"
    - key: "ChallengeResponseAuthentication"
      value: "yes"
    - key: "UseDNS"
      value: "no"
  notify: duo restart sshd

- name: configure PAM
  when: not duo_pam_manual_config|bool|default(true)
  become: yes
  block:
    - name: check for /etc/pam.d/common-auth-duo
      ansible.builtin.stat:
        path: /etc/pam.d/common-auth-duo
      register: common_auth_duo_file

    - name: create /etc/pam.d/common-auth-duo
      ansible.builtin.copy:
        src: /etc/pam.d/common-auth
        dest: /etc/pam.d/common-auth-duo
        remote_src: yes
        owner: root
        group: root
        mode: 0644
      when: not (common_auth_duo_file.stat.exists is defined and common_auth_duo_file.stat.exists)

    - name: backup /etc/pam.d/common-auth-duo
      ansible.builtin.copy:
        src: /etc/pam.d/common-auth-duo
        dest: /etc/pam.d/common-auth-duo.bak
        remote_src: yes
        owner: root
        group: root
        mode: 0644

    # determine if krb5 is in use
    - name: determine if krb5.so is in use
      ansible.builtin.lineinfile:
        dest: /etc/pam.d/common-auth-duo
        regexp: ".*krb5.so.*"
        state: absent
      check_mode: yes
      register: krb5_in_use
      changed_when: false


    ### TODO: rethink how to automate the PAM configuration
    #
    # The issue is that one wrong change with lineinfile could create a
    # completely insecure server that allows access to users without a
    # password or who fail authentication instead of pass it!
    #
    # Consider using variable switches to determine IF the PAM configs should
    # be updated and then provide several versions of how those files could
    # be updated either using different templates or a single template with
    # a lot of variables to control what gets configured (first might be a
    # better, more extensible option)
    #
    # Include an option for building on a custom PAM configuration specified
    # by the `paulrentschler.security` role.
    #
    # Consider including an option in the `paulrentschler.security` role that
    # can configure Duo 2FA with PAM so this role would be run first with the
    # manual config option, then `paulrentschler.security` would be run
    # indicating that Duo is already installed so it is included
    # in the PAM config.
    #
    #
    # Existing roles for ideas:
    #   * https://github.com/hurricanehrndz/ansible-yubikey
    #   * https://github.com/fgci-org/ansible-role-pam
    #
    # Ansible PAM-related modules:
    #   * https://docs.ansible.com/ansible/latest/collections/community/general/pamd_module.html
    #   * https://docs.ansible.com/ansible/latest/collections/community/general/pam_limits_module.html
    #

    # - include_tasks: pam_without_krb5.yml
    # ## if not krb5
    # # comment the existing pam_unix.so line
    # # add the new pam_unix.so requisite line
    # # add the pam_duo.so line
    #   when: not krb5_in_use.found

    # - include_tasks: pam_with_krb5.yml
    # ## if krb5
    # # comment the existing pam_krb5.so line
    # # add the new pam_krb5.so requisite line
    # # add the pam_duo.so line
    #   when: krb5_in_use.found



  rescue:
    # if something goes wrong, the backup file is used to restore the
    # /etc/pam.d/common-auth-duo file to what should be a working state
    - name: restore /etc/pam.d/common-auth-duo
      ansible.builtin.copy:
        src: /etc/pam.d/common-auth-duo.bak
        dest: /etc/pam.d/common-auth-duo
        remote_src: yes
        owner: root
        group: root
        mode: 0644
  always:
    # since a backup of /etc/pam.d/common-auth-duo is created every time
    # it makes no sense to keep it around if no changes are made to the
    # file; thus if they are the same, the backup is deleted
    - name: check for differences in the backup file
      ansible.builtin.command: diff common-auth-duo common-auth-duo.bak
      args:
        chdir: /etc/pam.d/
      register: common_auth_duo_diff
      changed_when: "common_auth_duo_diff.rc > 0"
      failed_when: "common_auth_duo_diff.rc > 1"
    - name: remove unneeded /etc/pam.d/common-auth-duo backup
      ansible.builtin.file:
        path: /etc/pam.d/common-auth-duo.bak
        state: absent
      when: not (common_auth_duo_diff.changed is defined and common_auth_duo_diff.changed)



- name: configure PAM manually
  debug:
    msg: "Duo Unix via PAM must be configured manually to avoid creating an insecure host."
  when: duo_pam_manual_config|bool|default(true)

  ### NOTE: Some useful information on PAM
  #
  # An amusing, but useful, introduction to PAM
  #   https://www.redhat.com/en/blog/pam-%E2%80%93-pluggable-authentication-modules-linux-and-how-edit-defaults
  #
  # General intro and overview of PAM
  #   https://documentation.suse.com/sled/15-SP1/html/SLED-all/cha-pam.html
  #
  # Locking accounts with pam-tally2 and pam-faillock
  #   http://asystemengineersnotebook.blogspot.com/2016/09/locking-user-accounts-with-pam-faillock.html
  #   - pam-faillock does not appear to be installed on Ubuntu but pam-tally2 is
  #   - it is arguable which is better (both claim to be)
  #

